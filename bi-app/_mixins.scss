// ------------------------------------------
// bi app mixins
// authors: 
// twitter.com/anasnakawa
// twitter.com/victorzamfir
// licensed under the MIT license 
// http://www.opensource.org/licenses/mit-license.php
// ------------------------------------------
// probably controversial changes by github.com/LyoNick:
// add prefix to ALL mixin to avoid conflict with compass,
// change the mixin prefix from bi-app to bidi (more readable - as in bidi-margin)
// left the global variables prefix as bi-app.
// this way it is easy to distinct variables from mixins.
// TODO:
// maybe change variable prefix too ???
// this is a test branch. delete this comment when making PR

// ------------------------------------------
// Table of contents
// ------------------------------------------
// padding
// margin
// float
// text align
// clear
// left / right
// border
//  - width
//  - style
//  - color
//  - generic
//  - radius
// ltr / rtl contents
// ------------------------------------------

// generic mixin for properties with values
// (top right bottom left)
// ------------------------------------------
@mixin bidi-compact($property, $top, $right, $bottom, $left) {
  @if $bi-app-direction == ltr {
    #{$property}: $top $right $bottom $left;
  } @else {
    #{$property}: $top $left $bottom $right;
  }
}

// padding
// ------------------------------------------
@mixin bidi-padding-left($distance) {
  padding-#{$bi-app-left}: $distance;
}

@mixin bidi-padding-right($distance) {
  padding-#{$bi-app-right}: $distance;
}

@mixin bidi-padding($top, $right, $bottom, $left) {
  @include bidi-compact(padding, $top, $right, $bottom, $left);
}

// margin
// ------------------------------------------
@mixin bidi-margin-left($distance) {
  margin-#{$bi-app-left}: $distance;
}

@mixin bidi-margin-right($distance) {
  margin-#{$bi-app-right}: $distance;
}

@mixin bidi-margin($top, $right, $bottom, $left) {
  @include bi-app-compact(margin, $top, $right, $bottom, $left);
}

// float
// ------------------------------------------
@mixin bidi-float-left {
  @include float($bi-app-left);
}

@mixin bidi-float-right {
  @include float($bi-app-right);
}

@mixin bidi-float($direction) {
  @if $direction == left {
    @include bidi-float-left;
  } @else if $direction == right {
    @include bidi-float-right;
  } @else {
    @include float($direction);
  }
}

// text align
// ------------------------------------------
@mixin bidi-text-align-left {
  text-align: $bi-app-left;
}

@mixin bidi-text-align-right {
  text-align: $bi-app-right;
}

@mixin bidi-text-align($direction) {
  @if $direction == left {
    @include bidi-text-align-left;
  } @else if $direction == right {
    @include bidi-text-align-right;
  } @else {
    text-align: $direction;
  }
}

// clear
// ------------------------------------------
@mixin bidi-clear-left {
  clear: $bi-app-left;
}

@mixin bidi-clear-right {
  clear: $bi-app-right;
}

@mixin bidi-clear($direction) {
  @if $direction == left {
    @include bidi-clear-left;
  } @else if $direction == right {
    @include bidi-clear-right;
  } @else {
    clear: $direction;
  }
}

// left / right
// ------------------------------------------
@mixin bidi-left($distance) {
  @if $bi-app-direction == ltr {
    left: $distance;
  } @else if $bi-app-direction == rtl {
    right: $distance;
  }
}

@mixin bidi-right($distance) {
  @if $bi-app-direction == ltr {
    right: $distance;
  } @else if $bi-app-direction == rtl {
    left: $distance;
  }
}

// border
// ------------------------------------------

// width
@mixin bidi-border-left-width($width) {
  border-#{$bi-app-left}-width: $width;
}

@mixin bidi-border-right-width($width) {
  border-#{$bi-app-right}-width: $width;
}

@mixin bidi-border-width($top, $right, $bottom, $left) {
  @include bidi-compact(border-width, $top, $right, $bottom, $left);
}

// style
@mixin bidi-border-left-style($style) {
  border-#{$bi-app-left}-style: $style;
}

@mixin bidi-border-right-style($style) {
  border-#{$bi-app-right}-style: $style;
}

@mixin bidi-border-style($top, $right, $bottom, $left) {
  @include bidi-compact(border-style, $top, $right, $bottom, $left);
}

// color
@mixin bidi-border-left-color($color) {
  border-#{$bi-app-left}-color: $color;
}

@mixin bidi-border-right-color($color) {
  border-#{$bi-app-right}-color: $color;
}

@mixin border-color($top, $right, $bottom, $left) {
  @include bidi-compact(border-color, $top, $right, $bottom, $left);
}

// generic
@mixin bidi-border-left($border-style) {
  border-#{$bi-app-left}: $border-style;
}

@mixin bidi-border-right($border-style) {
  border-#{$bi-app-right}: $border-style;
}

// radius
@mixin bidi-border-top-left-radius($radius) {
  -webkit-border-top-#{$bi-app-left}-radius: $radius;
     -moz-border-top#{$bi-app-left}-radius: $radius;
          border-top-#{$bi-app-left}-radius: $radius;
}

@mixin bidi-border-top-right-radius($radius) {
  -webkit-border-top-#{$bi-app-right}-radius: $radius;
     -moz-border-top#{$bi-app-right}-radius: $radius;
          border-top-#{$bi-app-right}-radius: $radius;
}

@mixin bidi-border-bottom-left-radius($radius) {
  -webkit-border-bottom-#{$bi-app-left}-radius: $radius;
     -moz-border-bottom#{$bi-app-left}-radius: $radius;
          border-bottom-#{$bi-app-left}-radius: $radius;
}

@mixin bidi-border-bottom-right-radius($radius) {
  -webkit-border-bottom-#{$bi-app-right}-radius: $radius;
     -moz-border-bottom#{$bi-app-right}-radius: $radius;
          border-bottom-#{$bi-app-right}-radius: $radius;
}

@mixin bidi-border-right-radius($radius) {
  @include bidi-border-top-right-radius($radius);
  @include bidi-border-bottom-right-radius($radius);
}

@mixin bidi-border-left-radius($radius) {
  @include bidi-border-top-left-radius($radius);
  @include bidi-border-bottom-left-radius($radius);
}

@mixin bidi-border-top-radius($radius) {
  @include bidi-border-top-left-radius($radius);
  @include bidi-border-top-right-radius($radius);
}

@mixin bidi-border-bottom-radius($radius) {
  @include bidi-border-bottom-left-radius($radius);
  @include bidi-border-bottom-right-radius($radius);
}

@mixin bidi-border-radius($topLeft, $topRight: null, $bottomRight: null, $bottomLeft: null) {
  @if $topRight != null {
    @include bidi-border-top-left-radius($topLeft);
    @include bidi-border-top-right-radius($topRight);
    @include bidi-border-bottom-right-radius($bottomRight);
    @include bidi-border-bottom-left-radius($bottomLeft);
  } @else {
    -webkit-border-radius: $topLeft;
       -moz-border-radius: $topLeft;
        -ms-border-radius: $topLeft;
         -o-border-radius: $topLeft;
            border-radius: $topLeft;
  }
}

// Returns "en" or "ar", useful for image suffixes.
// Usage: background-image: url(/img/header-#{lang()}.png);
@function lang() {
  @if $bi-app-direction == ltr {
    @return 'en';
  } @else {
    @return 'ar';
  }
}

// Support for "direction" declaration (renders ltr/rtl).
// Useful for form elements as they swap the text-indent property and align the text accordingly.
@mixin bidi-direction {
  direction: $bi-app-direction;
}

// Inverts a percentage value. Example: 97% becames 3%.
// Useful for background-position.
@function bidi-invert-percentage($percentage) {
  @if $bi-app-direction == rtl {
    @return 100% - $percentage;
  } @else {
    @return $percentage;
  }
}

// ltr / rtl contents
// ------------------------------------------
@mixin ltr {
  @if $bi-app-direction == ltr {
    @content;
  }
}

@mixin rtl {
  @if $bi-app-direction == rtl {
    @content;
  }
}
